BlissRom Project
===================

Getting Started
---------------
To get started with the BlissRom Project sources, you'll need to get
familiar with [Git and Repo](http://source.android.com/source/version-control.html).


Create the Directories
----------------------

You will need to set up some directories in your build environment.

To create them run:

    mkdir -p ~/bin
    mkdir -p ~/BlissRom


Install the Repository
----------------------

Enter the following to download the "repo" binary and make it executable:

curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/bin/repo && chmod a+x ~/bin/repo

You may need to reboot for these changes to take effect. 
Now enter the following to initialize the repository:

    cd ~/BlissRom


Repositories:
---------------

Before you continue --> run this in the terminal
----------------------------------------
    repo init -u https://github.com/BlissRom/manifest.git -b lp5.1 
    
    && 
    
    repo sync -f (-j4) (-j8) (-j16)- This depends on number of cpu cores- use just "repo sync" if you are unsure.

*PLEASE NOTE THAT YOU MUST USE THE -f flag when repo syncing/initializing if you want to sync with our default -j4 setup as android.googlesource seems to like to reject your requests if you set your -jflag too high. 
if you wish to avoid this issue run it repo sync -j1 otherwise -f (force) is recommended so it will resync the repos it gets error codes on. Thank you and have a nice day.*


Building the System
-------------------

Initialize the environment with the envsetup.sh script. Note that replacing "source" with a single dot saves a few characters, and the short form is more commonly used in documentation.

    . build/envsetup.sh && brunch hammerhead
    ( Replace hammerhead with your device name if you are building for other devices )

You can also build (and see how long it took) for specific devices like this:

Build the Code:

    . build/envsetup.sh && time brunch hammerhead
    ( Replace hammerhead with your device name if you are building for other devices )

***

BlissRom Build Flags
-----------------

These can be added to your device trees BoardConfig.mk

`BLISS_STRICT:= true`    "run strict aliasing"

`BLISS_O3 := true`   run   "O3 optimizations on build"

`BLISS_GRAPHITE := true`    "run Graphite optimiations on build"

`BLISS_KRAIT := true`    "run krait optimizations on build-- CPU specific, please verify if you can use this"

`BLISS_PIPE := true`   "This flag actually has no effect on the generated code, but it makes the compilation process faster."

`TARGET_TC_ROM := "@@"` Specify toolchain for Rom to be compiled with

`TARGET_TC_KERNEL := "@@"` Specify toolchain for kernel to be complied with.

@@= Toolchains are located in prebuilts/gcc/linux-x86/arm You only need to specify the end number be it 4.8-sm for 4.8 SaberMod Toolchain, this goes for both ROM and KERNEL.

If you use TARGET_TC_ROM and/or TARGET_TC_KERNEL, please add the following to BoardConfig.mk as well

`TARGET_GCC_VERSION_EXP := $(TARGET_TC_ROM)`

`TARGET_KERNEL_CUSTOM_TOOLCHAIN := $(TARGET_TC_KERNEL)`

Last but not least, add this line to end of BoardConfig.mk `-include vendor/bliss/config/sm.mk`
